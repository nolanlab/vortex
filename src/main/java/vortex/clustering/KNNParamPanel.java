/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * KMeansParamPanel.java
 *
 * Created on 01-Dec-2009, 22:57:50
 */
package vortex.clustering;

import sandbox.clustering.Dataset;
import sandbox.clustering.DistanceMeasure;
import java.util.Arrays;
import java.util.Comparator;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Nikolay
 */
/**
 * Creates new form KMeansParamPanel
 */
public class KNNParamPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;
    DistanceMeasure dm;

    /**
     * Creates new form KMeansParamPanel
     */
    public KNNParamPanel(DistanceMeasure dm, Dataset nd) {
        initComponents();
        this.dm = dm;
        int max = (int) Math.max((-12 * Math.pow(nd.getNumDimensions(), 2)) + 1050, 150);
        int min = (int) Math.max(5.0, -0.38 * Math.pow(nd.getNumDimensions(), 1.5) + 11);
        spinFKFrom.setModel(new SpinnerNumberModel(max, 1, 1000, 1));
        spinFKTo.setModel(new SpinnerNumberModel(min, 1, 1000, 1));
        spinMergeThs.setModel(new SpinnerNumberModel(0.90, dm.getSimilarityBounds()[0], dm.getSimilarityBounds()[1], 0.01));
    }

    public Integer[] getKNN() {
        int from, to, steps;
        double step;
        from = (Integer) ((SpinnerNumberModel) spinFKFrom.getModel()).getNumber();
        to = (Integer) ((SpinnerNumberModel) spinFKTo.getModel()).getNumber();
        steps = (Integer) ((SpinnerNumberModel) spinFKStep.getModel()).getNumber();
        step = (steps == 1) ? 0 : ((double) to - (double) from) / (double) (steps - 1);

        Integer[] out = new Integer[steps];

        for (int i = 0; i < steps; i++) {
            out[i] = (int) (from + (step * i));
        }

        Arrays.sort(out, new Comparator<Integer>() {
            @Override
            public int compare(Integer o1, Integer o2) {
                return o2 - o1;
            }
        });
        return out;
    }

    public DistanceMeasure getDistanceMeasure() {
        return dm;
    }

    public double getMergeSimilarityThreshold() {
        return (Double) spinMergeThs.getValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        spinFKFrom = new javax.swing.JSpinner();
        spinFKTo = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        spinFKStep = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        spinMergeThs = new javax.swing.JSpinner();

        setMinimumSize(new java.awt.Dimension(300, 90));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(300, 90));
        setLayout(new java.awt.GridBagLayout());

        spinFKFrom.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(150), null, null, Integer.valueOf(1)));
        spinFKFrom.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKFrom.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKFrom.setPreferredSize(new java.awt.Dimension(60, 25));
        spinFKFrom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKFromStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        add(spinFKFrom, gridBagConstraints);

        spinFKTo.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), null, null, Integer.valueOf(1)));
        spinFKTo.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKTo.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKTo.setPreferredSize(new java.awt.Dimension(60, 25));
        spinFKTo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKToStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        add(spinFKTo, gridBagConstraints);

        jLabel7.setForeground(new java.awt.Color(0, 51, 102));
        jLabel7.setText("From");
        jLabel7.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 2, 0);
        add(jLabel7, gridBagConstraints);

        jLabel8.setForeground(new java.awt.Color(0, 51, 102));
        jLabel8.setText("To");
        jLabel8.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel8.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel8.setPreferredSize(new java.awt.Dimension(60, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 1, 2, 0);
        add(jLabel8, gridBagConstraints);

        spinFKStep.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(15), Integer.valueOf(1), null, Integer.valueOf(1)));
        spinFKStep.setMaximumSize(new java.awt.Dimension(60, 25));
        spinFKStep.setMinimumSize(new java.awt.Dimension(60, 25));
        spinFKStep.setPreferredSize(new java.awt.Dimension(60, 25));
        spinFKStep.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinFKStepStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(spinFKStep, gridBagConstraints);

        jLabel12.setForeground(new java.awt.Color(0, 51, 102));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Steps");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jLabel12, gridBagConstraints);

        jLabel13.setForeground(new java.awt.Color(0, 51, 102));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Num. neighbors (N)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 1, 4);
        add(jLabel13, gridBagConstraints);

        jLabel10.setForeground(new java.awt.Color(0, 51, 102));
        jLabel10.setText("Merge clusters closer than:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 0, 0);
        add(jLabel10, gridBagConstraints);

        spinMergeThs.setMaximumSize(new java.awt.Dimension(60, 25));
        spinMergeThs.setMinimumSize(new java.awt.Dimension(60, 25));
        spinMergeThs.setPreferredSize(new java.awt.Dimension(60, 25));
        spinMergeThs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinMergeThsStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        add(spinMergeThs, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void spinFKStepStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKStepStateChanged
    }//GEN-LAST:event_spinFKStepStateChanged

    private void spinMergeThsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinMergeThsStateChanged
}//GEN-LAST:event_spinMergeThsStateChanged

    private void spinFKToStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKToStateChanged
    }//GEN-LAST:event_spinFKToStateChanged

    private void spinFKFromStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinFKFromStateChanged
    }//GEN-LAST:event_spinFKFromStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner spinFKFrom;
    private javax.swing.JSpinner spinFKStep;
    private javax.swing.JSpinner spinFKTo;
    private javax.swing.JSpinner spinMergeThs;
    // End of variables declaration//GEN-END:variables
}
