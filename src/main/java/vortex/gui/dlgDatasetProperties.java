/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dlgDatasetProperties.java
 *
 * Created on 24-Apr-2012, 22:15:52
 */
package vortex.gui;

import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.event.TableModelListener;
import javax.swing.table.TableModel;
import samusik.glasscmp.GlassDialog;
import sandbox.clustering.Dataset;

/**
 *
 * @author Nikolay
 */
public class dlgDatasetProperties extends GlassDialog {

    private static final long serialVersionUID = 1L;
    Dataset nd;

    /**
     * Creates new form dlgDatasetProperties
     */
    public dlgDatasetProperties(Dataset nd, Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Dataset Properties and Annotations: " + nd.getName());
        this.nd = nd;
        tabbedPaneMain.add("Annotations", new panAnnotationsBrowser(nd));
    }

    private class DatasetTableModel implements TableModel {

        Dataset nd;

        public DatasetTableModel(Dataset nd) {
            this.nd = nd;
        }
        ArrayList<TableModelListener> alTableModelListeners = null;
        private static final int ArrayListStartIndex = 1;

        @Override
        public Class<?> getColumnClass(int columnIndex) {
            if (columnIndex >= ArrayListStartIndex) {
                return Double.class;
            } else {
                return String.class;
            }
        }

        @Override
        public void addTableModelListener(TableModelListener l) {
            if (alTableModelListeners == null) {
                alTableModelListeners = new ArrayList<>();
            }
            alTableModelListeners.add(l);
        }

        @Override
        public int getColumnCount() {
            return ArrayListStartIndex + nd.getFeatureNamesCombined().length;
        }

        @Override
        public String getColumnName(int columnIndex) {
            if (columnIndex >= ArrayListStartIndex) {
                return nd.getFeatureNamesCombined()[columnIndex - ArrayListStartIndex];
            } else {
                if (columnIndex == 0) {
                    return "ProfileID";
                }
            }
            return "<No name>";
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            if (rowIndex < 0 || rowIndex >= nd.size()) {
                return null;
            }
            if (columnIndex >= ArrayListStartIndex) {
                if (columnIndex > nd.getNumDimensions()) {
                    return nd.getDatapoints()[rowIndex].getSideVector()[columnIndex - (nd.getNumDimensions() + ArrayListStartIndex)];
                }
                return nd.getDatapoints()[rowIndex].getVector()[columnIndex - ArrayListStartIndex];
            }
            if (columnIndex == 0) {
                return nd.getDatapoints()[rowIndex].getFullName();
            }
            return "<n/a>";
        }

        @Override
        public int getRowCount() {
            return nd.size();
        }

        @Override
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return false;
        }

        @Override
        public void removeTableModelListener(TableModelListener l) {
            if (alTableModelListeners != null) {
                alTableModelListeners.remove(l);
            }
        }

        @Override
        public void setValueAt(Object aValue, int rowIndex, int columnIndex) {
            return;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        popup = new javax.swing.JPopupMenu();
        tabbedPaneMain = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dataset Properties and Annotations");
        getContentPane().setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(tabbedPaneMain, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPopupMenu popup;
    private javax.swing.JTabbedPane tabbedPaneMain;
    // End of variables declaration//GEN-END:variables
}
